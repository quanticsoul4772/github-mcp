{
  "name": "github-mcp",
  "version": "1.0.0",
  "description": "GitHub MCP Server - AI-powered GitHub integration",
  "type": "module",
  "main": "build/main.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/quanticsoul4772/github-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/quanticsoul4772/github-mcp/issues"
  },
  "homepage": "https://github.com/quanticsoul4772/github-mcp#readme",
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/main.ts",
    "start": "node build/main.js",
    "clean": "rm -rf build",
    "prepare": "npm run build",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:run": "vitest run",
    "test:integration": "vitest run --testNamePattern=\"Integration\"",
    "test:unit": "vitest run --testNamePattern=\"^(?!.*Integration).*$\"",
    "test:performance": "vitest run --testNamePattern=\"Performance\"",
    "test:rate-limiting": "vitest run --testNamePattern=\"Rate Limiting\"",
    "lint": "eslint src --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "typecheck": "tsc --noEmit",
    "security:setup": "bash scripts/setup-security.sh",
    "security:scan": "npm audit && npm run security:secrets",
    "security:audit": "npx better-npm-audit audit --level moderate",
    "security:secrets": "detect-secrets scan --baseline .secrets.baseline",
    "security:pre-commit": "pre-commit run --all-files",
    "coverage:check": "npx nyc check-coverage --lines 80 --functions 80 --branches 80 --statements 80",
    "quality:check": "npm run lint && npm run typecheck && npm run coverage:check",
    "quality:complexity": "eslint src --ext .ts,.tsx --rule 'complexity: [error, 10]'",
    "quality:dependencies": "npx depcheck",
    "quality:licenses": "npx license-checker --production --summary",
    "ci:test": "vitest run --coverage",
    "ci:quality": "npm run quality:check && npm run quality:dependencies && npm run security:scan",
    "agents:demo": "tsx src/agents/demo.ts",
    "agents:analyze": "npm run build && node -e \"import('./build/agents/examples/basic-usage.js').then(m => m.runExamples())\"",
    "agents:quick-scan": "npm run build && node -e \"import('./build/agents/index.js').then(m => m.quickAnalyze('src/', {type: 'directory', format: 'console'}).then(r => console.log(r.report)))\"",
    "agents:security-scan": "npm run build && node -e \"import('./build/agents/examples/basic-usage.js').then(m => m.quickSecurityScan('src/'))\"",
    "agents:generate-tests": "npm run build && node -e \"import('./build/agents/examples/basic-usage.js').then(m => m.generateTestsForFile(process.argv[1] || 'src/index.ts'))\" --",
    "agents:report": "npm run build && node -e \"import('./build/agents/examples/basic-usage.js').then(m => m.generateAnalysisReport('src/', 'markdown', 'analysis-report.md'))\"",
    "agents:health": "npm run build && node -e \"import('./build/agents/examples/basic-usage.js').then(m => m.monitorAgentHealth())\"",
    "agents:cli": "npm run build && node build/agents/cli/analysis-cli.js",
    "analyze": "npm run agents:cli",
    "analyze:security": "npm run agents:cli -- --agents security",
    "analyze:types": "npm run agents:cli -- --agents type-safety",
    "analyze:tests": "npm run agents:cli -- --agents testing",
    "analyze:all": "npm run agents:cli -- --format html --output analysis-report.html",
    "ci:agents": "npm run build && npm run agents:quick-scan",
    "team:analyze": "tsx src/agents/team/team-cli.ts analyze",
    "team:workflow": "tsx src/agents/team/team-cli.ts workflow",
    "team:agents": "tsx src/agents/team/team-cli.ts agents",
    "team:demo": "tsx src/agents/team/team-demo.ts full",
    "team:demo:overview": "tsx src/agents/team/team-demo.ts overview",
    "team:security": "tsx src/agents/team/team-cli.ts analyze --agents security-audit",
    "team:quality": "tsx src/agents/team/team-cli.ts analyze --agents code-quality",
    "team:tests": "tsx src/agents/team/team-cli.ts analyze --agents test-coverage",
    "team:performance": "tsx src/agents/team/team-cli.ts analyze --agents performance",
    "team:docs": "tsx src/agents/team/team-cli.ts analyze --agents documentation",
    "team:report": "tsx src/agents/team/team-cli.ts analyze --format html --output team-analysis-report.html"
  },
  "keywords": [
    "mcp",
    "github",
    "ai",
    "model-context-protocol",
    "code-analysis",
    "static-analysis",
    "test-generation",
    "security-scanning"
  ],
  "author": "quanticsoul4772",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.2",
    "@octokit/rest": "^22.0.0",
    "dotenv": "^17.2.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/node": "^24.2.1",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "@vitest/globals": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "better-npm-audit": "^3.11.0",
    "depcheck": "^1.4.7",
    "eslint": "^9.17.0",
    "license-checker": "^25.0.1",
    "nyc": "^17.1.0",
    "prettier": "^3.4.2",
    "tsx": "^4.20.3",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  }
}
